# This is a sample Python script.
import Map
# Press Shift+F10 to execute it or replace it with your code.
# Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.
import move
import pygame
import Player
import random
# constants

size_cube = 57
size_line = 4

# the pixel number of the up left corner in every cube
up_limit = 84
left_limit = 91
# those are not existing cubes:
down_limit = 694
right_limit = 701

window_width = 800
window_height = 775
PINK = (255, 146, 255)
IMAGE = 'screen1new.jpg'
ICE = 'ice.jpg'
EMPTY_CUBE = 'empty_cube.jpg'
PLAYER1_PIC = 'probPL1.jpg'
PLAYER2_PIC = 'probPL2.jpg'
REFRESH_RATE = 10
FRUIT1 = "cherry.jpg"
FRUIT2 = "strawberry.jpg"
FRUIT3 = "blueberry.jpg"
FRUITS = 7

"""
checks if ice got to the limit: 
    
    if up_limit != down_limit:
        screen.blit(ice, [left_limit, up_limit])
        pygame.display.flip()
        up_limit = up_limit+61
"""


# funcs
def print_pic(file_name, x, y, key):
    pic = pygame.image.load(file_name).convert()
    if key is not None:
        pic.set_colorkey(key)
    screen.blit(pic, [Map.Map[y][x].pixelw, Map.Map[y][x].pixelh])
    pygame.display.flip()


def try_move(player):
    x = player.xcube
    y = player.ycube
    if player.move(player2):
        print_pic(EMPTY_CUBE, x, y, None)
        print_pic(player.pic, player.xcube, player.ycube, None)


def is_ice_loop(x, y, is_ice):
    if Map.check_on_map(x, y):
        if is_ice==None or is_ice==Map.Map[y][x].ice:
            if x != player2.xcube or y != player2.ycube:
                return True
    return False

def create_all_fruits():
    counter = 0
    url = FRUIT1
    while counter<7:
        if counter == 4:
            url = FRUIT2
        if counter == 6:
            url = FRUIT3
        numx = random.randint(0,9)
        numy = random.randint(0, 9)
        while Map.Map[numy][numx].fruit != 0:
            numx = random.randint(0, 9)
            numy = random.randint(0, 9)
        Map.Map[numy][numx].create_fruit(url)
        print_pic(url, numx, numy, None)
        counter = counter+1


def who_won(pl1, pl2):
    if pl1.score>pl2.score:
        return pl1
    elif pl1.score<pl2.score:
        return pl2
    else:
        return None


player1 = Player.Player(4, 4, "pink", 0, [0, -1], PLAYER1_PIC)
player2 = Player.Player(5, 5, "purple", 0, [0, 1], PLAYER2_PIC)

# init screen
pygame.init()
size = (window_width, window_height)
screen = pygame.display.set_mode(size)
img = pygame.image.load(IMAGE)
screen.blit(img, (0, 0))
create_all_fruits()
print_pic(PLAYER1_PIC,player1.xcube, player1.ycube, None)
print_pic(PLAYER2_PIC,player2.xcube, player2.ycube, None)
b = player1.check_got_fruit()
if b:
    FRUITS = FRUITS-1
b = player2.check_got_fruit()
if b:
    FRUITS = FRUITS-1

moved = False
ice_loop = False
clock = pygame.time.Clock()
finish = False
while not finish:
    if ice_loop:
        url = Map.Map[ylocate][xlocate].update_ice()
        print_pic(url[0], xlocate, ylocate, None)
        if url[1]!=None:
            print_pic(url[1], xlocate, ylocate, None)
        xlocate = xlocate + xi2
        ylocate = ylocate + yi2
        ice_loop = is_ice_loop(xlocate, ylocate, is_ice)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finish = True
        elif event.type == pygame.KEYDOWN:
            moved = True
            if event.key == pygame.K_SPACE and not ice_loop:
                xi2 = player1.direction[0]
                yi2 = player1.direction[1]
                xlocate = player1.xcube + xi2
                ylocate = player1.ycube + yi2
                ice_loop = is_ice_loop(xlocate, ylocate, None)
                if ice_loop:
                    is_ice = Map.Map[ylocate][xlocate].ice
                moved = False
            elif event.key == pygame.K_UP:
                player1.direction = [0, -1]
            elif event.key == pygame.K_DOWN:
                player1.direction = [0, 1]
            elif event.key == pygame.K_LEFT:
                player1.direction = [-1, 0]
            elif event.key == pygame.K_RIGHT:
                player1.direction = [1, 0]
            else:
                moved = False
            if moved:
                try_move(player1)
    b = player1.check_got_fruit()
    if b:
        FRUITS = FRUITS - 1
    b = player2.check_got_fruit()
    if b:
        FRUITS = FRUITS - 1
    if FRUITS==0:
        finish = True
    clock.tick(REFRESH_RATE)
pygame.quit()



"""
# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    print_hi('PyCharm')
"""
# See PyCharm help at https://www.jetbrains.com/help/pycharm/
